package htl.bergmann.passwordproducerconsumer;

import java.awt.Color;
import java.util.ArrayList;

/**
 *
 * @author Matthias
 */
public class ConsumerGUI extends javax.swing.JPanel {

    private ArrayList<Password> passwords;
    private PasswordConsumer passwordConsumer;
    private PasswordGUI passwordGUI;

    public ConsumerGUI(ArrayList<Password> passwords, PasswordGUI passwordGUI) {
        initComponents();
        this.passwords = passwords;
        this.passwordConsumer = new PasswordConsumer(passwords, this);
        this.passwordGUI = passwordGUI;
        new Thread(this.passwordConsumer).start();
        setActive(false);
    }

    public void setActive(boolean active) {
        if (active) {
            lbActive.setBackground(Color.green);
        } else {
            lbActive.setBackground(Color.red);
        }
        passwordGUI.updateQueue();
    }

    public void setHash(String hash) {
        lbHash.setText(hash);
        lbPassword.setText("Working");
        passwordGUI.updateQueue();
    }

    public void setPassword(String password) {
        lbPassword.setText(password);
        taHistory.append(lbHash.getText() + " -> " + password + "\n");
        passwordGUI.updateQueue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lbActive = new javax.swing.JLabel();
        lbHash = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taHistory = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        lbActive.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(lbActive, gridBagConstraints);

        lbHash.setText("hash");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbHash, gridBagConstraints);

        lbPassword.setText("solution");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbPassword, gridBagConstraints);

        taHistory.setColumns(20);
        taHistory.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        taHistory.setRows(5);
        jScrollPane1.setViewportView(taHistory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbActive;
    private javax.swing.JLabel lbHash;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JTextArea taHistory;
    // End of variables declaration//GEN-END:variables
}
